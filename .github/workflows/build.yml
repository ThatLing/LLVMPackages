name: LLVM

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        type: [Debug, Release]
    env:
      LLVM_VERSION: 19.1.0
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v4

    - name: Enable Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Download and build LLVM
      run: |
        cmake "-DLLVM_VERSION=${{ env.LLVM_VERSION }}" -P download_llvm.cmake
        cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.type }} "-DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install-${{ env.LLVM_VERSION }}" -DLLVM_ENABLE_PROJECTS=clang -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_OPTIMIZED_TABLEGEN=ON -DLLVM_BUILD_LLVM_C_DYLIB=OFF -S llvm-${{ env.LLVM_VERSION }}/llvm -B build-${{ env.LLVM_VERSION }}
        cmake --build "build-${{ env.LLVM_VERSION }}"
        cmake --install "build-${{ env.LLVM_VERSION }}"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4.3.1
      with:
        name: llvm-${{ env.LLVM_VERSION }}-${{ matrix.os }}-${{ matrix.type }}
        path: install-${{ env.LLVM_VERSION }}
